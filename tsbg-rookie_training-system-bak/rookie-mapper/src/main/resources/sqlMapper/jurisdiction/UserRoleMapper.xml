<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tsbg.mis.dao.jurisdiction.UserRoleDao" >
  <resultMap id="BaseResultMap" type="com.tsbg.mis.jurisdiction.model.UserRole" >
    <id column="user_role_id" property="uroleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_code" property="createCode" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="last_update_code" property="lastUpdateCode" jdbcType="VARCHAR" />
    <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP" />
    <result column="proj_id" property="projId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_role_id, user_id, role_id, remark, status, create_code, create_date, last_update_code, 
    last_update_date, proj_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_role
    where user_role_id = #{uroleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_role
    where user_role_id = #{uroleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tsbg.mis.jurisdiction.model.UserRole" >
    insert into user_role (user_role_id, user_id, role_id, 
      remark, status, create_code, 
      create_date, last_update_code, last_update_date, 
      proj_id)
    values (#{uroleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createCode,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{lastUpdateCode,jdbcType=VARCHAR}, #{lastUpdateDate,jdbcType=TIMESTAMP}, 
      #{projId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tsbg.mis.jurisdiction.model.UserRole" >
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uroleId != null" >
        user_role_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createCode != null" >
        create_code,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="lastUpdateCode != null" >
        last_update_code,
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date,
      </if>
      <if test="projId != null" >
        proj_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uroleId != null" >
        #{uroleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createCode != null" >
        #{createCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateCode != null" >
        #{lastUpdateCode,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projId != null" >
        #{projId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsbg.mis.jurisdiction.model.UserRole" >
    update user_role
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createCode != null" >
        create_code = #{createCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateCode != null" >
        last_update_code = #{lastUpdateCode,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projId != null" >
        proj_id = #{projId,jdbcType=INTEGER},
      </if>
    </set>
    where user_role_id = #{uroleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsbg.mis.jurisdiction.model.UserRole" >
    update user_role
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_code = #{createCode,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      last_update_code = #{lastUpdateCode,jdbcType=VARCHAR},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      proj_id = #{projId,jdbcType=INTEGER}
    where user_role_id = #{uroleId,jdbcType=INTEGER}
  </update>
  <insert id="insertData" >
    insert into user_role (user_id, role_id, creator_id, create_date, proj_id)
    values  (#{uid,jdbcType=INTEGER}, #{rid,jdbcType=INTEGER}, #{creatorId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{projId,jdbcType=INTEGER});
  </insert>
  <select id="selectProJMsgByUid" resultType="com.tsbg.mis.jurisdiction.bag.RoleAndProJPackage" parameterType="java.lang.Integer" >
    SELECT u.`user_id` AS userId,u.`role_id` AS roleId,r.`role` AS role,u.`proj_id` AS projId,p.`pro_name` AS proName
    FROM user_role AS u
    LEFT JOIN project AS p ON u.`proj_id`= p.`proj_id`
    LEFT JOIN role AS r ON u.`role_id`=r.`roleid`
    WHERE u.`user_id`= #{uid,jdbcType=INTEGER};
  </select>
  <select id="selectRoleCountByCondition" resultType="int" parameterType="java.lang.Integer" >
   SELECT COUNT(0) FROM user_role AS a WHERE a.`user_id`=#{uid,jdbcType=INTEGER}
   AND a.`role_id`=#{roleId,jdbcType=INTEGER} AND a.`proj_id`=#{projId,jdbcType=INTEGER};
  </select>
  <select id="selectProJIdByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    SELECT b.`proj_id` FROM user_role AS b WHERE b.`user_id`=#{uid,jdbcType=INTEGER};
  </select>
  <select id="getRole"  parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT u.`role_id` FROM user_role AS u WHERE u.`user_id`=#{uid,jdbcType=INTEGER} AND u.`is_lock` = 1 AND u.`status` = 1;
  </select>

  <select id="selectRoleId" resultType="java.lang.Integer">
    select role_id roleId from user_role where user_id = #{userId} AND proj_id = 10 AND status = 1 AND is_lock = 1
  </select>

  <!--根据工号查询手机号-->
  <select id="selectPhoneNumberByStaffCode" resultType="java.lang.String">
    SELECT
        a.`phone_number` AS phoneNumber
    FROM
        user_database.`user_info` AS a
    WHERE
        a.`staff_code` = #{staffCode}
  </select>

  <!--根据角色查询所有用户-->
  <select id="selectStaffCodeByRoleId" resultType="java.lang.String">
    SELECT DISTINCT
        b.`staff_code` AS staffCode
    FROM
        user_database.`user_role` AS a
        LEFT JOIN user_database.`user_info` AS b ON a.`user_id` = b.`user_id`
    WHERE
        a.`role_id` = #{roleId}
        AND a.`status` = 1
  </select>

  <!--查询员工姓名-->
  <select id="selectStaffNameByStaffCode" resultType="java.lang.String">
    SELECT
        a.`user_name`
    FROM
        user_database.`user_info` AS a
    WHERE
        a.`staff_code` = #{staffCode}
  </select>

  <select id="queryRoleInfoWithRoleIds" resultType="com.tsbg.mis.jurisdiction.model.Role">
    SELECT
        a.`role_id` AS roleId,
        a.`role_name` AS roleName,
        a.`role_describe` AS roleDescribe,
        a.`proj_id` AS projId,
        a.`status` AS status,
        a.`remark` AS remark
    FROM
        user_database.`role` AS a
    WHERE
        a.`status` = 1
        AND a.`proj_id` = 10
        AND a.`role_id` IN
        <foreach collection="list" index="index" item="roleId" open="(" separator="," close=")">
          #{roleId}
        </foreach>
  </select>

  <!--根据角色查询所有用户-->
  <select id="selectReviewerByRoleId" resultType="com.tsbg.mis.jurisdiction.model.UserInfo">
    SELECT DISTINCT
        b.`staff_code` AS staffCode,
        b.`user_id` AS userId,
        b.`account_name` AS accountName,
        b.`user_name` AS userName
    FROM
        user_database.`user_role` AS a
        LEFT JOIN user_database.`user_info` AS b ON a.`user_id` = b.`user_id`
    WHERE
        a.`role_id` = #{roleId}
        AND a.`status` = 1
  </select>

</mapper>